name: Build Wheels

on: workflow_dispatch

jobs: 
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        ref: master
    # Add ssh-key to clone repository cadical
    - uses: webfactory/ssh-agent@v0.9.0
      with: 
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    # needed for cross-compilation on linux
    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.17.0
      env:
        MACOSX_DEPLOYMENT_TARGET: "10.15"
        CIBW_BUILD_FRONTEND: build # python -m build --wheel
        CIBW_ARCHS_MACOS: auto
        CIBW_ARCHS_LINUX: auto aarch64
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
        CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
        CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_2
        CIBW_MUSLLINUX_AARCH64_IMAGE: musllinux_1_2
        # skip PyPy, cpython3.6/3.7/3.8/3.9/3.10 for all archs, windows, 32-bit
        # and only build arch-specific for macos
        CIBW_SKIP: pp* cp3[6789]* cp310* *win* *i686* *universal2*

        CIBW_BUILD_VERBOSITY: 1
        CIBW_BEFORE_ALL_LINUX: bash ./instdeps.sh
        CIBW_BEFORE_ALL_MACOS: brew install libarchive pybind11
      
        CIBW_ENVIRONMENT_MACOS: CPPFLAGS="-I/usr/local/include"
      with:        
        package-dir: .
        output-dir: wheelhouse
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: master

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        # unpacks all CIBW artifacts into wheelhouse/
        pattern: cibw-*
        path: wheelhouse
        merge-multiple: true


    - name: Publish package to PyPI
      shell: bash
      run: |
        pip install twine
        export TWINE_USERNAME="__token__"
        export TWINE_PASSWORD="${{ secrets.PYPI_API_TOKEN }}"
        twine upload --skip-existing --repository-url https://upload.pypi.org/legacy/ wheelhouse/* --verbose
   
    
        