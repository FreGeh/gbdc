name: Windows Build-Test

on:
  push:
    branches: [ "d" ]

jobs:
        
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [cl]
        cpp_compiler: [cl]

    steps:
    - uses: actions/checkout@v3
    # Add ssh-key to clone repository cadical
    - uses: webfactory/ssh-agent@v0.9.0
      with: 
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # set up cygwin to install libarchive
    - name: Set up Cygwin on Windows and install libarchive
      if: runner.os == 'Windows'
      uses: egor-tensin/setup-cygwin@v4
      with:
        packages: libarchive-devel-3.7.2-2 cmake gcc
        
    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
          echo "build-output-dir=${{ github.workspace }}" >> "$env:GITHUB_OUTPUT"
        
    - name: TestOutputDir
      shell: bash
      run: |
        echo "${{ steps.strings.outputs.build-output-dir }}"
        

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts_${{ runner.os }}_${{ matrix.c_compiler }}
        path: ${{ steps.strings.outputs.build-output-dir }}
